

# filename: h4_cnn.hyp
# training inputs for DDQN connect-four game player using NNs 
# which are constructed of CNN layers followed by FC layers
# NOTE: the equal sign is used as a delimeter, and should not exist 
# anywhere in this file except where hyperparameters are set

start_episode = 1100
end_episode = 100000
console_status_interval = 500
tensorboard_status_interval = 100
ckpt_interval = 2500
render_game_at = [1, 99999]
enable_reward_shaping = False
env_debug_mode = False


agent1_learning_rate = 0.00025
agent2_learning_rate = 0.00025
a1_epsilon_start = .9
a1_epsilon_end = 0.01
a2_epsilon_start = .9
a2_epsilon_end = 0.01
batch_size = 32
gamma = 0.99
tau = 0.005
max_replay_buffer_size = 100000


# Convolutional layers: (out_channels, kernel_size, stride, padding)
cnn_a1 = [(16, 4, 1, 1), (32, 4, 1, 1)]
cnn_a2 = [(16, 4, 1, 1), (32, 4, 1, 1)]

# Fully connected layer dimensions for each agent
fc_a1 = [640, 128, 64]
fc_a2 = [640, 128, 64]

NOTE: Calculate the output size for each convolutional layer using the formula:
CNN_Output_Size is equal to ((Input_Size−Kernel_Size+2×Padding)/Stride)+1
Make sure the FC_input_size matches the CNN_output_Size



----------- Training Results ----------------
Started training at: 	2024-05-15  05:55:03
Ended training at: 	2024-05-15  07:19:07
Total training time:  1:24:03.680787
start_episode: 1100
end_episode: 100000
Episode count: 99999
agent1 end epsilon: 0.0105074339234845
agent2 end epsilon: 0.0105074339234845
Draws: 75
agent_1_starts / agent_2_starts 1.0040120767562968
agent_1_reward / agent_2_reward 1.097304753820034
Ave steps per game: 7.52
total_loss1 / num_steps1: 1.6782754386213128e-07
total_loss2 / num_steps2: 0.0001318660142715089
Input Parameters:
		start_episode :	1100
		end_episode :	100000
		console_status_interval :	500
		tensorboard_status_interval :	100
		ckpt_interval :	2500
		render_game_at :	[1, 99999]
		enable_reward_shaping :	False
		env_debug_mode :	False
		agent1_learning_rate :	0.00025
		agent2_learning_rate :	0.00025
		a1_epsilon_start :	0.9
		a1_epsilon_end :	0.01
		a2_epsilon_start :	0.9
		a2_epsilon_end :	0.01
		batch_size :	32
		gamma :	0.99
		tau :	0.005
		max_replay_buffer_size :	100000
		cnn_a1 :	[(16, 4, 1, 1), (32, 4, 1, 1)]
		cnn_a2 :	[(16, 4, 1, 1), (32, 4, 1, 1)]
		fc_a1 :	[640, 128, 64]
		fc_a2 :	[640, 128, 64]
models saved:
./wts/m1_h2
replay buffer saved to
./wts/replay_buffer_h2.pkl

